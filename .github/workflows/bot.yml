name: Run Discord Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 310  # Tempo máximo do job

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Verificar conteúdo de bot_state.json 1
        run: cat data/bot_state.json
        
      # Passo 3: Restaurar o cache do bot (data/bot_state.json)
      - name: Restore bot state cache
        uses: actions/cache@v3
        with:
          path: data/bot_state.json  # Certifique-se de que o arquivo data/bot_state.json esteja aqui
          key: bot-state-cache-${{ runner.os }}-v1
          restore-keys: |
            bot-state-cache-${{ runner.os }}
        
      - name: Verificar conteúdo de bot_state.json 2
        run: cat data/bot_state.json

      - name: Run Bot
        id: run_bot
        run: |
          python main.py
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}

      - name: Trigger Save Cache Workflow
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"event_type": "save_cache"}' \
            https://api.github.com/repos/${{ github.repository }}/dispatches
        if: always() 
        # Garantir que rode mesmo numa falha