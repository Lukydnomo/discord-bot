name: Run Discord Bot

on:
  push:
    branches:
      - main  # Executa o workflow ao fazer push na branch 'main'
  workflow_dispatch:  # Permite iniciar manualmente
  schedule:
    - cron: '0 */6 * * *'  # Executa a cada 6 horas

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código mais recente
      - name: Checkout Code
        uses: actions/checkout@v3

      # Passo 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Passo 3: Restaurar o cache do arquivo JSON (se existir)
      - name: Restaurar cache do arquivo JSON
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: sessaoclosedopen.json
          key: ${{ runner.os }}-fdabot-sessaoclosedopen

      # Passo 4: Instalar dependências
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Passo 5: Executar o bot
      - name: Run Bot
        id: run_bot
        run: |
          echo "Iniciando o bot..."
          python main.py
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}

      # Passo 6: Verificar o estado do arquivo JSON
      - name: Verificar estado do arquivo JSON
        run: |
          echo "Verificando o conteúdo de sessaoclosedopen.json:"
          if [ -f sessaoclosedopen.json ]; then
            cat sessaoclosedopen.json
          else
            echo '{"sessaoclosedopen": 0}' > sessaoclosedopen.json
          fi

      # Passo 7: Salvar o estado no cache
      - name: Atualizar cache do arquivo JSON
        id: cache-save
        uses: actions/cache@v3
        with:
          path: sessaoclosedopen.json
          key: ${{ runner.os }}-fdabot-sessaoclosedopen
